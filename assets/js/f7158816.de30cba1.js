"use strict";(self.webpackChunksaga_docs=self.webpackChunksaga_docs||[]).push([[68],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,m=u["".concat(o,".").concat(g)]||u[g]||k[g]||i;return n?a.createElement(m,l(l({ref:t},d),{},{components:n})):a.createElement(m,l({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2443:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return k}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],s={},o="Hvordan f\xe5 data inn i Saga",p={unversionedId:"utvikling-paa-saga/hvordan-faa-data-inn-i-saga",id:"utvikling-paa-saga/hvordan-faa-data-inn-i-saga",title:"Hvordan f\xe5 data inn i Saga",description:"Som domeneteam p\xe5 Saga er man avhengig av data. Mange datasett er allerede tilgjengelige i datakatalogen, men ofte vil man ha behov for \xe5 hente inn nye datakilder.",source:"@site/docs/03-utvikling-paa-saga/03-hvordan-faa-data-inn-i-saga.md",sourceDirName:"03-utvikling-paa-saga",slug:"/utvikling-paa-saga/hvordan-faa-data-inn-i-saga",permalink:"/docs-public/utvikling-paa-saga/hvordan-faa-data-inn-i-saga",draft:!1,editUrl:"https://github.com/svvsaga/docs-public/edit/main/docs/03-utvikling-paa-saga/03-hvordan-faa-data-inn-i-saga.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Kostnader og budsjett",permalink:"/docs-public/utvikling-paa-saga/kostnader-og-budsjett"},next:{title:"Analyse i BigQuery",permalink:"/docs-public/bigquery/"}},d={},k=[{value:"Pipeline-arkitekturer",id:"pipeline-arkitekturer",level:2},{value:"Pull-pipelines",id:"pull-pipelines",level:3},{value:"Eksempel",id:"eksempel",level:4},{value:"Push-pipelines",id:"push-pipelines",level:3},{value:"Eksempel",id:"eksempel-1",level:4}],u={toc:k};function g(e){var t=e.components,s=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hvordan-f\xe5-data-inn-i-saga"},"Hvordan f\xe5 data inn i Saga"),(0,i.kt)("p",null,"Som domeneteam p\xe5 Saga er man avhengig av data. Mange datasett er allerede tilgjengelige i ",(0,i.kt)("a",{parentName:"p",href:"https://saga-datacatalog-prod-lszg.ew.r.appspot.com/"},"datakatalogen"),", men ofte vil man ha behov for \xe5 hente inn nye datakilder."),(0,i.kt)("p",null,"N\xe5r data skal deles i datakatalogen, eller benyttes som del av et foredlet dataprodukt, b\xf8r man lage en automatisk ingest-pipeline. For at denne skal kunne bygges og vedlikeholdes p\xe5 en robust og effektiv m\xe5te, er det en del prinsipper som b\xf8r f\xf8lges:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Gjenproduserbar infrastruktur")," - Alle ressurser som benyttes i GCP b\xf8r provisjoneres p\xe5 en reproduserbar og versjonert metode, slik at man kan v\xe6re sikker p\xe5 at samme infrastruktur kj\xf8rer i ulike milj\xf8er, samt kunne sette opp infrastruktur p\xe5 nytt dersom det skulle v\xe6re n\xf8dvendig. I praksis betyr dette at ressurser defineres i Terraform, sjekkes inn i kode og deployes via CI/CD (f.eks. GitHub Actions)."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Keep it simple")," - Lag den enkleste arkitekturen som oppfyller kravene til ingest. I mange tilfeller betyr dette en eller flere Cloud Functions, men kan ogs\xe5 v\xe6re enkle ",(0,i.kt)("a",{parentName:"li",href:"https://cloud.google.com/bigquery/docs/scheduling-queries"},"scheduled queries"),", eller data-verkt\xf8y som ",(0,i.kt)("a",{parentName:"li",href:"https://www.getdbt.com/"},"DBT"),". I mer avanserte scenarier kan orkestreringstjenester som ",(0,i.kt)("a",{parentName:"li",href:"https://cloud.google.com/dataflow"},"Dataflow")," v\xe6re n\xf8dvendig, men b\xf8r ikke v\xe6re f\xf8rstevalg for enhver l\xf8sning, pga \xf8kt kompleksitet og kostnad."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Idempotens og deduplisering"),' - I GCP kan det skje at functions feiler og blir retryet; det er derfor viktig at enhver pipeline er laget slik at gjentatte kj\xf8ringer ikke f\xf8rer til inkonsistente data. For eksempel kan man ha ulike BigQuery-tabeller for "landing" og visning av data, der den f\xf8rstnevnte kan inneholde duplikater, mens den endelige tabellen kun viser deduplisert data, f.eks. ved \xe5 definere et view, eller en merge query fra landings-tabellen.')),(0,i.kt)("h2",{id:"pipeline-arkitekturer"},"Pipeline-arkitekturer"),(0,i.kt)("p",null,'N\xe5r man skal hente data fra et annet system, kan man gj\xf8re dette enten ved \xe5 eksplisitt sp\xf8rre systemet ("pull"), eller ved \xe5 \xe5pne for at systemet kan sende inn data selv ("push").'),(0,i.kt)("h3",{id:"pull-pipelines"},"Pull-pipelines"),(0,i.kt)("p",null,'Integrasjoner som henter data ved "pulling" kjennetegnes ved f\xf8lgende:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kildesystemet m\xe5 ha et endepunkt som er tilgjengelig fra internett",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Det kan f.eks. v\xe6re et REST API eller en database, og kan godt v\xe6re passordbeskyttet eller sikret p\xe5 annen m\xe5te"),(0,i.kt)("li",{parentName:"ul"},"Unntaksmessig kan det settes opp VPN-kobling fra interne SVV-systemer til GCP"))),(0,i.kt)("li",{parentName:"ul"},"Integrasjonen er ansvarlig for oppdateringsfrekvens og validering av data"),(0,i.kt)("li",{parentName:"ul"},"Kildesystemet trenger ikke kjenne til integrasjonen eller Saga"),(0,i.kt)("li",{parentName:"ul"},"Henting av data skjer periodisk, f.eks. via en Cloud Scheduler")),(0,i.kt)("h4",{id:"eksempel"},"Eksempel"),(0,i.kt)("p",null,'Her er et eksempel p\xe5 en "pull"-pipeline som bruker Cloud Functions, GCS og BigQuery, for et tenkt "Weather" API:'),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Example poller pipeline",src:n(3799).Z,width:"982",height:"271"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"En Cloud Scheduler trigger hver time og kaller function'en ",(0,i.kt)("inlineCode",{parentName:"li"},"weather-poller")," over HTTP"),(0,i.kt)("li",{parentName:"ol"},"Polleren gj\xf8r et REST-kall mot API og henter v\xe6rdata i JSON-format"),(0,i.kt)("li",{parentName:"ol"},"Polleren lagrer JSON uendret i en GCS-b\xf8tte ",(0,i.kt)("inlineCode",{parentName:"li"},"weather-ingest")),(0,i.kt)("li",{parentName:"ol"},"En Cloud Function ",(0,i.kt)("inlineCode",{parentName:"li"},"weather-standardizer")," lytter p\xe5 nye filer i ",(0,i.kt)("inlineCode",{parentName:"li"},"weather-ingest"),"-b\xf8tta, leser disse og konverterer dem til et standardisert format"),(0,i.kt)("li",{parentName:"ol"},"Standardizeren streamer data til en tabell ",(0,i.kt)("inlineCode",{parentName:"li"},"internal.weather")),(0,i.kt)("li",{parentName:"ol"},"Et view ",(0,i.kt)("inlineCode",{parentName:"li"},"standardized.weather")," dedupliserer data fra ",(0,i.kt)("inlineCode",{parentName:"li"},"internal.weather")," basert p\xe5 et definert unikhetskriterie (f.eks. m\xe5lestasjon og tidspunkt)")),(0,i.kt)("h3",{id:"push-pipelines"},"Push-pipelines"),(0,i.kt)("p",null,'Integrasjoner som henter data ved "pushing" kjennetegnes ved f\xf8lgende:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Integrasjonen m\xe5 tilgjengeliggj\xf8re et endepunkt som kildesystemet kan sende data til",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Dette kan v\xe6re f.eks. en Pub/Sub-topic, en GCS-bucket eller en BigQuery-tabell"))),(0,i.kt)("li",{parentName:"ul"},"Kildesystemet styrer oppdateringsfrekvens; kan v\xe6re periodisk, kontinuerlig eller sporadisk"),(0,i.kt)("li",{parentName:"ul"},"Kildesystemet m\xe5 kjenne til Saga og autentisere seg mot GCP, typisk via en Service Account"),(0,i.kt)("li",{parentName:"ul"},"Kildesystemet trenger ikke v\xe6re eksponert p\xe5 internett, men m\xe5 kunne gj\xf8re kall mot GCP")),(0,i.kt)("h4",{id:"eksempel-1"},"Eksempel"),(0,i.kt)("p",null,'Her er et eksempel p\xe5 en veldig enkel "push"-pipeline der et kildesystem skriver direkte til BigQuery:'),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Example BigQuery push pipeline",src:n(5448).Z,width:"681",height:"201"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Kildesystemet skriver kontinuerlig data til BigQuery-tabellen ",(0,i.kt)("inlineCode",{parentName:"li"},"raw.trafficdata")),(0,i.kt)("li",{parentName:"ol"},"En ",(0,i.kt)("a",{parentName:"li",href:"https://cloud.google.com/bigquery/docs/scheduling-queries"},"scheduled query")," transformerer og merger data i standardisert form inn i tabellen ",(0,i.kt)("inlineCode",{parentName:"li"},"standardized.trafficdata"))),(0,i.kt)("p",null,'Merk at selv om denne arkitekturen ved f\xf8rste \xf8yekast ser mye enklere ut enn "pull"-pipelinen, s\xe5 er mye av kompleksiteten og ansvaret flyttet til kildesystemet; det blir opp til dette \xe5 s\xf8rge for at data blir sendt p\xe5 riktig tid og i riktig format.'))}g.isMDXComponent=!0},5448:function(e,t,n){t.Z=n.p+"assets/images/example_pipeline_bigquery.drawio-c6ced22e2a940dee97faf85d54ef74f3.svg"},3799:function(e,t,n){t.Z=n.p+"assets/images/example_pipeline_poller.drawio-e25eb7d5fc90f679d80fc4bcd6445b7f.svg"}}]);